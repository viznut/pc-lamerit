";***********************************************************************\n"
"\n"
"; OPPAGE.PPS - An O command (operator page) replacement\n"
"\n"
";***********************************************************************\n"
"\n"
"; Variable Declarations\n"
"\n"
"TIME    pTime    ' The time at which the user requested the page\n"
"TIME    sTime    ' The start time at which paging is allowed for all\n"
"TIME    eTime    ' The end time at which paging is allowed for all\n"
"\n"
"INTEGER x        ' Temporary storage for cursor x position\n"
"INTEGER y        ' Temporary storage for cursor y position\n"
"INTEGER i        ' Index variable for page loop\n"
"INTEGER maxTries ' The maximum tries allowed to page the SysOp\n"
"\n"
"STRING  msg      ' A variable to hold the message to be displayed\n"
"                 ' to the SysOp\n"
"STRING  ynAns    ' A generic variable to hold a yes/no response\n"
"\n"
"STRING  BEEP     ' An ASCII beep\n"
"STRING  CR       ' An ASCII carriage return\n"
"STRING  ANSI     ' ANSI escape sequence header\n"
"STRING  HOME     ' ANSI home sequence\n"
"STRING  CLREOL   ' ANSI clear to end of line sequence\n"
"\n"
";***********************************************************************\n"
"\n"
"; Initializations\n"
"\n"
"LET pTime    = TIME()                 ' Start time of the page\n"
"LET sTime    = READLINE(PCBDAT(),189) ' Read these two from the\n"
"LET eTime    = READLINE(PCBDAT(),190) ' PCBOARD.DAT file\n"
"\n"
"LET maxTries = 5\n"
"\n"
"LET BEEP     = CHR(7)\n"
"LET CR       = CHR(13)\n"
"LET ANSI     = CHR(27)+\"[\"\n"
"LET HOME     = ANSI+\"0;0H\"\n"
"LET CLREOL   = ANSI+\"K\"\n"
"\n"
";***********************************************************************\n"
"\n"
"; Main Program\n"
"\n"
"' If pagins is allowed right now or if the user has SysOp level access\n"
"IF (((pTime>=sTime) & (pTime<=eTime)) | (CURSEC()>=SYSOPSEC())) THEN\n"
"\n"
"  ' If SysOp level access or caller hasn't already paged\n"
"  IF ((CURSEC() >= SYSOPSEC()) | !PAGESTAT()) THEN\n"
"\n"
"    ' The user may page (either a valid time or high security level)\n"
"\n"
"    DISPTEXT 579,LFBEFORE ' Display the paging SysOp message\n"
"    DISPTEXT 97,LFBEFORE  ' Display the time and abort information\n"
"\n"
"    ' Tell SysOp what to do\n"
"    LET msg = SPACE(15)+\"Press (Space) to acknowledge Page, \"\n"
"    LET msg = msg+\"(Esc) when done.\"\n"
"    GOSUB topLineMsg\n"
"\n"
"    FOR i = 1 TO maxTries\n"
"\n"
"      ' Display a walking dot and beep at remote caller and SysOp\n"
"      PRINT \".\"\n"
"      MPRINT BEEP\n"
"      GOSUB localBeep\n"
"\n"
"      ' If SysOp hits the space bar . . .\n"
"      IF (KINKEY() = \" \") THEN\n"
"        LET msg = \"\"     ' Clear the SysOp message\n"
"        GOSUB topLineMsg\n"
"        CHAT             ' Start SysOp chat\n"
"        PAGEOFF          ' Since we've chatted, turn off page indicator\n"
"        END              ' Exit\n"
"      ENDIF\n"
"\n"
"      ' If user aborted page, set up to exit loop\n"
"      IF (ABORT()) LET i = maxTries+1\n"
"\n"
"    NEXT\n"
"\n"
"    ' Clear the SysOp message\n"
"    LET msg = \"\"\n"
"    GOSUB topLineMsg\n"
"\n"
"    ' If user aborted page . . .\n"
"    IF (ABORT()) THEN\n"
"      RESETDISP ' Reset the display so more info may be displayed\n"
"      NEWLINE   ' Send a newline\n"
"      END       ' Exit\n"
"    ELSE\n"
"      NEWLINE   ' Otherwise a newline is sufficient\n"
"    ENDIF\n"
"\n"
"  ENDIF\n"
"\n"
"ENDIF\n"
"\n"
"' The user shouldn't be allowed to page (or page not successful), so\n"
"PAGEON                                         ' Turn on paged indicator\n"
"\n"
"DISPTEXT 128,LFBEFORE+NEWLINE                  ' SysOp not available\n"
"\n"
"LET ynAns = NOCHAR()                           ' Default to no\n"
"PROMPTSTR 571,ynAns,1,\"\",YESNO+NEWLINE+LFAFTER+FIELDLEN+UPCASE\n"
"\n"
"IF (ynAns = YESCHAR()) KBDSTUFF \"C\"+CR+\"Y\"+CR  ' If yes do a comment\n"
"\n"
"END\n"
"\n"
";***********************************************************************\n"
"\n"
":topLineMsg ' Clear the top line of the BBS screen and display a message\n"
"\n"
"LET x = GETX()     ' Save the cursor position\n"
"LET y = GETY()\n"
"\n"
"SPRINT HOME,CLREOL ' Pos in upper left of display and clear the line\n"
"\n"
"SPRINT msg         ' Display message to the SysOp\n"
"\n"
"SPRINT ANSI+STRING(y)+\";\"+STRING(x)+\"H\" ' Restore original position\n"
"\n"
"RETURN             ' Return to the calling routine\n"
"\n"
";***********************************************************************\n"
"\n"
":localBeep ' Routine to alert the SysOp (not the caller)\n"
"\n"
"SOUND 110  ' Sound a 110 hertz tone locally\n"
"DELAY 2    ' Pause for a couple of clock ticks\n"
"SOUND 220  ' Sound a 220 hertz tone locally\n"
"DELAY 2    ' Pause for a couple of clock ticks\n"
"SOUND 440  ' Sound a 440 hertz tone locally\n"
"DELAY 2    ' Pause for a couple of clock ticks\n"
"SOUND 880  ' Sound a 880 hertz tone locally\n"
"DELAY 2    ' Pause for a couple of clock ticks\n"
"SOUND 0    ' Turn off the speaker\n"
"DELAY 10   ' Pause for the remainder of the clock ticks\n"
"\n"
"RETURN     ' Return to the calling routine\n"
"\n"
";***********************************************************************\n"

